---
import i18next, { t } from "i18next";
import { localizePath } from "astro-i18next";
import { HeadHrefLangs } from "astro-i18next/components";

const { title } = Astro.props;
const isMenuItemActivated = (menuItemPath) => {
	const pathname = Astro.url?.pathname || "/";
	if (menuItemPath === localizePath("/")) return menuItemPath === pathname;
	return Astro.url?.pathname?.startsWith(menuItemPath);
};
---

<!DOCTYPE html>
<html lang={i18next.language}>
	<head>
		<meta charset="UTF-8" />
		<HeadHrefLangs />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="bg-slate-900 text-white font-sans max-w-4xl mx-auto mt-24">
		<header
			class="fixed inset-x-0 top-[20px] flex flex-row justify-center m-auto text-sm font-bold xs:text-lg sm:text-xl"
		>
			<nav
				class="flex flex-row items-center backdrop-blur-md bg-black/30 rounded-full py-2 px-6 w-8/12 max-w-xs shadow-md"
			>
				<ul class="w-full flex flex-row justify-between">
					<li
						class={` ${
							isMenuItemActivated(localizePath("/"))
								? "text-transparent bg-clip-text bg-gradient-to-r from-green-300 via-blue-500 to-purple-600"
								: "text-white"
						}`}
					>
						<a href={localizePath("/")}>{t("home.nav.home")}</a>
					</li>
					<li
						class={` ${
							isMenuItemActivated(localizePath("/about"))
								? "text-transparent bg-clip-text bg-gradient-to-r from-green-300 via-blue-500 to-purple-600"
								: "text-white"
						}`}
					>
						<a href={localizePath("/about")}
							>{`${t("general.about-me")}.`}</a
						>
					</li>
					<li
						class={` ${
							isMenuItemActivated(localizePath("/blog"))
								? "text-transparent bg-clip-text bg-gradient-to-r from-green-300 via-blue-500 to-purple-600"
								: "text-white"
						}`}
					>
						<a href={localizePath("/blog")}>{t("home.nav.blog")}</a>
					</li>
				</ul>
			</nav>
			<select
				id="language-selector"
				class="appearance-none backdrop-blur-md bg-black/30 text-2xl py-2 px-4 rounded-full cursor-pointer focus:rounded-xl"
			>
				<option data-display="🇬🇧" value="en" selected>🇬🇧</option>
				<option data-display="🇪🇸" value="es">🇪🇸</option>
			</select>
		</header>

		<main class="mx-6 md:mx-20 text-xl leading-7 tracking-normal">
			<slot />
		</main>

		<footer class="text-center my-20 text-slate-400">
			<span class="block">© 2023 Josemático | All rights reserved</span>
			<span>Design and development made with ❤️ by me.</span>
		</footer>
		<style is:global>
			html {
				scroll-behavior: smooth;
			}
		</style>
		<script>
			import { DEFAULT_LANG, languages } from "../shared/constants";

			import { getLanguage } from "../shared/utils";

			const $ = (selector) => document.querySelector(selector);
			const languageSelector = $("#language-selector");
			const styleModeSelector = $("#style-mode-selector");

			const detectLanguage = () => {
				const language = getLanguage()?.code;
				languageSelector.value = language;
			};

			document.addEventListener("DOMContentLoaded", function (event) {
				detectLanguage();
			});

			languageSelector.onchange = ({ target: { value } }) => {
				const regex = /\/[a-z]{2}(?=\/|$)/;
				const isDefaultLanguage = DEFAULT_LANG === value;
				const langPathName = !isDefaultLanguage ? `/${value}` : "";
				const cleanedPathName = window.location.pathname.replace(
					regex,
					""
				);
				const localizedPath = `${langPathName}${cleanedPathName}`;

				window.location.pathname = localizedPath;
			};
		</script>
	</body>
</html>
