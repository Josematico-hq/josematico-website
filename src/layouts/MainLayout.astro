---
import i18next, { t } from "i18next";
import { localizePath } from "astro-i18next";

const { title } = Astro.props;
const menuItemSelected = (item) => Astro.url.pathname?.includes(item);
---

<!DOCTYPE html>
<html lang={i18next.language}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="bg-slate-900 text-white font-sans max-w-4xl mx-auto mt-24">
		<header
			class="fixed inset-x-0 top-[20px] flex flex-row justify-center m-auto text-sm font-bold xs:text-lg sm:text-xl"
		>
			<nav
				class="flex flex-row items-center backdrop-blur-md bg-black/30 rounded-full py-2 px-6 w-8/12 max-w-xs shadow-md"
			>
				<ul class="w-full flex flex-row justify-between">
					<li
						class="text-transparent bg-clip-text bg-gradient-to-r from-green-300 via-blue-500 to-purple-600"
					>
						<a href={localizePath("/")}>{t("home.nav.home")}</a>
					</li>
					<li>
						<a href={localizePath("/about")}
							>{t("home.nav.about-me")}</a
						>
					</li>
					<li>
						<a href={localizePath("/blog")}>{t("home.nav.blog")}</a>
					</li>
				</ul>
			</nav>
			<select
				id="language-selector"
				class="appearance-none backdrop-blur-md bg-black/30 text-2xl py-2 px-4 rounded-full cursor-pointer focus:rounded-xl"
			>
				<option data-display="ðŸ‡¬ðŸ‡§" value="en" selected>ðŸ‡¬ðŸ‡§</option>
				<option data-display="ðŸ‡ªðŸ‡¸" value="es">ðŸ‡ªðŸ‡¸</option>
			</select>
		</header>

		<main class="mx-6">
			<slot />
		</main>
	</body>
	<style is:global>
		html {
			scroll-behavior: smooth;
		}
	</style>
</html>

<script>
	import { DEFAULT_LANG, languages } from "../shared/constants";

	import { getLanguage } from "../shared/utils";

	const $ = (selector) => document.querySelector(selector);
	const languageSelector = $("#language-selector");
	const styleModeSelector = $("#style-mode-selector");

	const detectLanguage = () => {
		const language = getLanguage()?.code;
		languageSelector.value = language;
	};

	document.addEventListener("DOMContentLoaded", function (event) {
		detectLanguage();
	});

	languageSelector.onchange = ({ target: { value } }) => {
		const regex = /\/[a-z]{2}(?=\/|$)/;
		const isDefaultLanguage = DEFAULT_LANG === value;
		const langPathName = !isDefaultLanguage ? `/${value}` : "";
		const cleanedPathName = window.location.pathname.replace(regex, "");
		const localizedPath = `${langPathName}${cleanedPathName}`;

		window.location.pathname = localizedPath;
	};
</script>
